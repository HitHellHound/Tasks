#include <bits/stdc++.h>

using namespace std;

int n, m, pix, piy, kpx, kpy;
int pole[1000][1000];
pair <int,int> q[10000];
int dvizh[2][4] = {{-1, 0, 1, 0},
                   { 0, 1, 0,-1}};

int main()
{

    cin >> n >> m >> pix >> piy >> kpx >> kpy;
    for (int i = 1; i <= m; i++){
        for (int j = 1; j <= n; j++){
            cin >> pole[i][j];
        }
    }

    for (int i = 0; i <= n + 1; i++) pole[0][i] = pole[m+1][i] = 1;
    for (int i = 0; i <= m + 1; i++) pole[i][0] = pole[i][n+1] = 1;

    q[0].first = pix;
    q[0].second = piy;
    int l = 0;
    int r = 1;
    pole[pix][piy] = 2;

    while (l != r){
        for (int i = 0; i < 4; i++){
            if (pole[q[l].first + dvizh[0][i]][q[l].second + dvizh[1][i]] == 0){
                pole[q[l].first + dvizh[0][i]][q[l].second + dvizh[1][i]] = pole[q[l].first][q[l].second] + 1;
                q[r].first = q[l].first + dvizh[0][i];
                q[r].second = q[l].second + dvizh[1][i];
                r++;
            }
        }
        l++;
    }

    for (int i = 0; i <= m + 1; i++){
        for (int j = 0; j <= n + 1; j++){
            cout << pole[i][j] << " ";
        }
        cout << endl;
    }

    cout << pole[kpx][kpy] - 2;
    return 0;
}
