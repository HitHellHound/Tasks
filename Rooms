#include <bits/stdc++.h>

using namespace std;

int pole [1002][1002], n, m, k = 0, l, r;
pair <int, int> q[10002];
int dvizh[2][4] = {{-1, 0, 1, 0},
                   { 0, 1, 0,-1}};

void kom(int a, int b){
    l = 0;
    r = 1;
    q[l].first = a;
    q[l].second = b;

    while (l != r){
        if (r > 10000){
            r = 0;
        }
        for (int i = 0; i < 4; i++){
            if (pole[q[l].first + dvizh[0][i]][q[l].second + dvizh[1][i]] == 0){
                pole[q[l].first + dvizh[0][i]][q[l].second + dvizh[1][i]] = 1;
                q[r].first = q[l].first + dvizh[0][i];
                q[r].second = q[l].second + dvizh[1][i];
                r++;
            }
        }
        if (l > 10000){
            l = 0;
        }
        l++;
    }
}

int main()
{
    cin >> n >> m;

    for (int i = 0; i <= n + 1; i++) pole[0][i] = pole[m+1][i] = 1;
    for (int i = 0; i <= m + 1; i++) pole[i][0] = pole[i][n+1] = 1;

    for (int i = 1; i <= m; i++){
        for (int j = 1; j <= n; j++){
            cin >> pole[i][j];
        }
    }

    for (int i = 1; i <= m; i++){
        for (int j = 1; j <= n; j++){
            if (pole[i][j] == 0){
                kom(i, j);
                k++;
            }
        }
    }

    cout << k;
    return 0;
}
